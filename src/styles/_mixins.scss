
$enable-caret:                true !default;
$enable-rounded:              true !default;
$enable-shadows:              true !default;
$enable-gradients:            true !default;
$enable-transitions:          true !default;
$enable-reduced-motion:       true !default;
$enable-smooth-scroll:        true !default;
$enable-grid-classes:         true !default;
$enable-cssgrid:              false !default;
$enable-button-pointers:      true !default;
$enable-rfs:                  true !default;
$enable-validation-icons:     true !default;
$enable-negative-margins:     false !default;
$enable-deprecation-messages: true !default;
$enable-important-utilities:  true !default;

$variable-prefix:             '' !default;


@import "~rfs/scss";
@import "~bootstrap/scss/mixins/box-shadow";
@import "~bootstrap/scss/mixins/breakpoints";
@import "~bootstrap/scss/mixins/gradients";
@import "~bootstrap/scss/mixins/reset-text";

// Helper function to replace negative values with 0
@function valid-radius($radius) {
  $return: ();
  @each $value in $radius {
    @if type-of($value) == number {
      $return: append($return, max($value, 0));
    } @else {
      $return: append($return, $value);
    }
  }
  @return $return;
}

@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
  @if $enable-rounded {
    border-radius: valid-radius($radius);
  }
  @else if $fallback-border-radius != false {
    border-radius: $fallback-border-radius;
  }
}

@mixin border-top-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
    border-top-right-radius: valid-radius($radius);
  }
}

@mixin border-right-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-right-radius: valid-radius($radius);
    border-bottom-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-bottom-right-radius: valid-radius($radius);
    border-bottom-left-radius: valid-radius($radius);
  }
}

@mixin border-left-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
    border-bottom-left-radius: valid-radius($radius);
  }
}

@mixin border-top-left-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
  }
}

@mixin border-top-right-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-top-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-right-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-bottom-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-left-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-bottom-left-radius: valid-radius($radius);
  }
}

@mixin transition($transition...) {
  @if length($transition) == 0 {
    $transition: $transition-base;
  }

  @if length($transition) > 1 {
    @each $value in $transition {
      @if $value == null or $value == none {
        @warn "The keyword 'none' or 'null' must be used as a single argument.";
      }
    }
  }

  @if nth($transition, 1) != null {
    transition: $transition;
  }
}


@mixin svg ($size: 1.5em, $align: 'middle') {
  width: $size;
  height: $size;
  fill: currentColor;
  vertical-align: $align;
}

@mixin type-headline1 {
  font-family: $font-family-heading;
  font-size: $font-size-h1;
  font-weight: $font-weight-light;
  letter-spacing: -1.5px;
}
@mixin type-headline2 {
  font-family: $font-family-heading;
  font-size: $font-size-h2;
  font-weight: $font-weight-light;
  letter-spacing: -0.5px;
}
@mixin type-headline3 {
  font-family: $font-family-heading;
  font-size: $font-size-h3;
  font-weight: $font-weight-regular;
  letter-spacing: 0px;
}
@mixin type-headline4 {
  font-family: $font-family-heading;
  font-size: $font-size-h4;
  font-weight: $font-weight-regular;
  letter-spacing: 0.25px;
}
@mixin type-headline5 {
  font-family: $font-family-heading;
  font-size: $font-size-h5;
  font-weight: $font-weight-regular;
  letter-spacing: 0px;
}
@mixin type-headline6 {
  font-family: $font-family-heading;
  font-size: $font-size-h6;
  font-weight: $font-weight-medium;
  letter-spacing: 0.25px;
}
@mixin type-body1 {
  font-family: $font-family-body;
  font-size: $font-size-body1;
  font-weight: $font-weight-regular;
  letter-spacing: 0.5px;
}
@mixin type-body2 {
  font-family: $font-family-body;
  font-size: $font-size-body2;
  font-weight: $font-weight-regular;
  letter-spacing: 0.25px;
}
@mixin type-subtitle1 {
  font-family: $font-family-heading;
  font-size: $font-size-body1;
  font-weight: $font-weight-regular;
  letter-spacing: 0.15px;
}
@mixin type-subtitle2 {
  font-family: $font-family-heading;
  font-size: $font-size-body2;
  font-weight: $font-weight-medium;
  letter-spacing: 0.1px;
}
@mixin type-button {
  font-family: $font-family-ui;
  font-size: $font-size-body2;
  font-weight: $font-weight-medium;
  letter-spacing: 1.25px;
}
@mixin type-overline {
  font-family: $font-family-body;
  font-size: $font-size-sub2;
  font-weight: $font-weight-regular;
  letter-spacing: 1.5px;
}
@mixin type-caption {
  font-family: $font-family-body;
  font-size: $font-size-sub1;
  font-weight: $font-weight-regular;
  letter-spacing: 0.4px;
}
@mixin type-code {
  font-family: $font-family-monospace;
  font-size: $font-size-code;
  font-weight: $font-weight-regular;
  letter-spacing: 0px;
}

