

.row {
  display: flex !important;
  flex-flow: row nowrap;
  flex: 1 1 auto;
  align-items: center;
  justify-content: stretch;

  & + &:not(.flush) {
    margin-top: $grid-gutter-width * 0.25;
  }

  &.spaced {
    > *:not(.vr) {
      margin-right: $grid-gutter-width * 0.25;

      &:last-child {
        margin-right: 0;
      }
    }

    > .vr {
      margin-right: $grid-gutter-width * 0.5;
    }
  }

  &.justify-left {
    justify-content: flex-start;
  }

  &.justify-center {
    justify-content: center;
  }

  &.justify-right {
    justify-content: flex-end;
  }

  &.justify-between {
    justify-content: space-between;
  }

  &.justify-around {
    justify-content: space-around;
  }

  &.justify-stretch {
    justify-content: stretch;
  }

  &.align-top {
    align-items: flex-start;
  }

  &.align-center {
    align-items: center;
  }

  &.align-bottom {
    align-items: flex-end;
  }

  &.align-stretch {
    align-items: stretch;
  }

  &.fill {
    flex: 1 1 0;
  }

  &.min-content {
    flex: 0 0 0;
  }

  &.wrap {
    flex-wrap: wrap;
  }

  .spacer {
    width: $grid-gutter-width * 0.25;
  }
}

.container > .row {
  margin-right: -$grid-gutter-width * 0.5;
  margin-left: -$grid-gutter-width * 0.5;
}

.column {
  align-self: stretch;
  display: flex !important;
  flex-flow: column nowrap;

  &.fill {
    flex: 1 1 auto;
    width: 100%;
  }

  &.min-content {
    flex: 0 0 0;
  }

  &.spaced {
    > *:not(.hr) {
      margin-bottom: $grid-gutter-width * 0.25;

      &:last-child {
        margin-bottom: 0;
      }
    }

    > .hr {
      margin-bottom: $grid-gutter-width * 0.5;
    }
  }

  &.scrollable {
    overflow-x: hidden;
    overflow-y: auto;
  }

  &.align-top {
    justify-content: flex-start;
  }

  &.align-center {
    justify-content: center;
  }

  &.align-bottom {
    justify-content: flex-end;
  }

  &.align-between {
    justify-content: space-between;
  }

  &.align-around {
    justify-content: space-around;
  }

  &.align-stretch {
    justify-content: stretch;
  }

  &.justify-left {
    align-items: flex-start;
  }

  &.justify-center {
    align-items: center;
  }

  &.justify-right {
    align-items: flex-end;
  }

  &.justify-stretch {
    align-items: stretch;
  }

  .spacer {
    height: $grid-gutter-width * 0.25;
  }
}

.no-gutters {
  margin-right: 0;
  margin-left: 0;

  > .col,
  > [class*="col-"] {
    padding-right: 0;
    padding-left: 0;
  }
}

.hr {
  display: flex;
  justify-content: center;
  align-items: stretch;
  align-self: stretch;

  flex: 0 0 0;
  margin: $grid-gutter-width * 0.25 0;

  .inner {
    flex: 1 0 100%;
    height: 0;
    border: 0;
    border-top: $hr-border-width solid $hr-border-color;
  }
}

.vr {
  display: flex;
  justify-content: center;
  align-items: stretch;
  align-self: stretch;

  flex: 0 0 0;
  margin: 0 $grid-gutter-width * 0.25;

  .inner {
    flex: 0 0 0;
    width: 0;
    border: 0;
    border-left: $hr-border-width solid $hr-border-color;
  }
}

.fill {
  flex: 1 1 auto;
}

.full {
  flex: 1 1 100%;
}

.grid {
  display: grid !important;

  &.spaced {
    grid-gap: $grid-gutter-width * 0.25;
  }

  > .wrap {
    position: relative;
    display: flex;
    justify-content: stretch;
    align-items: stretch;

    > * {
      flex-grow: 1;
      flex-shrink: 1;
      flex-basis: auto;
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @if $grid-columns > 0 {
    @for $i from 1 through $grid-columns {
      .grid-column#{$infix}-#{$i} {
        grid-column-start: $i;
      }

      .grid-row#{$infix}-#{$i} {
        grid-column-start: $i;
      }

      .grid-column-span#{$infix}-#{$i} {
        grid-column-end: span $i;
      }

      .grid-row-span#{$infix}-#{$i} {
        grid-column-end: span $i;
      }
    }
  }
}
